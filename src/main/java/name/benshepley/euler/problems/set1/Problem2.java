package name.benshepley.euler.problems.set1;

import name.benshepley.euler.framework.Solvable;
import name.benshepley.euler.math.sequence.FibonacciSequence;

import java.util.stream.LongStream;

/*  Problem 2: https://projecteuler.net/problem=2
    Even Fibonacci numbers
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

	SEE TestProblem_2 FOR SOLUTION.
 */

public class Problem2 implements Solvable {

	@Override
	public String getSolution() {
		FibonacciSequence fibonacciSequence = new FibonacciSequence();
		LongStream sequenceGenerator = fibonacciSequence.generate().takeWhile(i -> i < 4_000_000);
		long sum = sequenceGenerator.filter(i -> (i % 2 == 0)).sum();
		return Long.toString(sum);
	}
}
